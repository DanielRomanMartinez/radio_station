// Mocks generated by Mockito 5.4.2 from annotations
// in radio_station/test/infrastructure/repositories/http_radio_station_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:radio_station/domain/model/objects/radio_station.dart' as _i6;
import 'package:radio_station/domain/model/value_object/response.dart' as _i2;
import 'package:radio_station/domain/repositories/favorite_radio_station_repository.dart'
    as _i5;
import 'package:radio_station/domain/services/http_service.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0 extends _i1.SmartFake implements _i2.Response {
  _FakeResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HttpService].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpService extends _i1.Mock implements _i3.HttpService {
  MockHttpService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i4.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i4.Future<_i2.Response>);
}

/// A class which mocks [FavoriteRadioStationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFavoriteRadioStationRepository extends _i1.Mock
    implements _i5.FavoriteRadioStationRepository {
  MockFavoriteRadioStationRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i6.RadioStation?> read({required int? id}) => (super.noSuchMethod(
        Invocation.method(
          #read,
          [],
          {#id: id},
        ),
        returnValue: _i4.Future<_i6.RadioStation?>.value(),
      ) as _i4.Future<_i6.RadioStation?>);
  @override
  _i4.Future<void> addFavorite(_i6.RadioStation? radioStation) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFavorite,
          [radioStation],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> removeFavorite(int? id) => (super.noSuchMethod(
        Invocation.method(
          #removeFavorite,
          [id],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<List<_i6.RadioStation>> getFavorites() => (super.noSuchMethod(
        Invocation.method(
          #getFavorites,
          [],
        ),
        returnValue:
            _i4.Future<List<_i6.RadioStation>>.value(<_i6.RadioStation>[]),
      ) as _i4.Future<List<_i6.RadioStation>>);
}
